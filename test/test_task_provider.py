import pytest

from providers.task import Task, TaskType


def assert_single_task_equals(tasks: list[Task],
                              data: str,
                              task_type: TaskType):
    assert len(tasks) == 1
    assert tasks[0].data == data
    assert tasks[0].task_type == task_type


def test_get_existing_demidovich_task(dem_provider):
    task = dem_provider.get_tasks('1')
    assert_single_task_equals(task, "1.jpg", TaskType.PHOTO)


def test_get_non_existing_demidovich_returns_text(dem_provider):
    task = dem_provider.get_tasks('2')
    assert_single_task_equals(task, "Ð—Ð°Ð´Ð°Ñ‡Ð° Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð° ðŸ¤¥", TaskType.TEXT)


def test_get_demidovich_dot_subtask_returns_no_dot(dem_provider):
    task = dem_provider.get_tasks('1.1')
    assert_single_task_equals(task, "1.jpg", TaskType.PHOTO)


def test_probabilities_provider(prob_provider):
    task = prob_provider.get_tasks('01')
    assert task == [Task(TaskType.TEXT, 'ref', "Ð’Ð¾Ñ‚ Ñ‚Ð²Ð¾Ðµ Ð·Ð°Ð´Ð°Ð½Ð¸Ðµ 01 ðŸ˜˜")]

    task = prob_provider.get_tasks('02')
    assert task == [Task(TaskType.TEXT, 'Ð¢Ð°ÐºÐ¾Ð¹ Ð¿Ñ€Ð°ÐºÑ‚Ð¸ÐºÐ¸ Ð½ÐµÑ‚ ðŸ¤¥')]


if __name__ == '__main__':
    pytest.main()
